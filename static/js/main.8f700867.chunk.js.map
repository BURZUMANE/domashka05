{"version":3,"sources":["transitions/slide.module.css","transitions/pop.module.css","contexts/ContactListContext.js","components/singleContact/SingleContact.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/alert/Alert.js","components/phoneBook/PhoneBook.js","App.js","index.js"],"names":["module","exports","ContactListContext","createContext","transformFetchResult","data","Object","keys","map","key","id","reverse","ContactListContextProvider","props","useState","contacts","setContacts","replicatedContacts","setReplicates","isOn","setShow","fetchData","a","axios","result","console","log","postContact","contact","post","useEffect","deleteContact","delete","filterContacts","filter","newContacts","item","firstName","toLowerCase","includes","lastName","Provider","value","addContact","find","setTimeout","children","SingleContact","text","useContext","phoneNumber","className","onClick","initialState","ContactForm","first","setFirst","last","setLast","number","setNumber","handleChange","e","targetName","target","name","onSubmit","preventDefault","replace","style","display","flexDirection","width","htmlFor","type","onChange","required","maxLength","Filter","Alert","PhoneBook","CSSTransition","in","timeout","classNames","slideTransition","unmountOnExit","TransitionGroup","component","popTransition","App","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mMCE7GC,EAAqBC,0BAE5BC,EAAuB,SAACC,GAK5B,OAJwBC,OAAOC,KAAKF,GAAMG,KAAI,SAACC,GAAD,oBAC5CC,GAAID,GACDJ,EAAKI,OAEaE,WAwFVC,EArFoB,SAACC,GAAW,IAAD,EACZC,mBAAS,IADG,mBACrCC,EADqC,KAC3BC,EAD2B,OAEAF,mBAAS,IAFT,mBAErCG,EAFqC,KAEjBC,EAFiB,OAGpBJ,oBAAS,GAHW,mBAGrCK,EAHqC,KAG/BC,EAH+B,KAKtCC,EAAS,uCAAG,4BAAAC,EAAA,+EAEOC,IACnB,mEAHY,OAERC,EAFQ,OAKdR,EAAYZ,EAAqBoB,EAAOnB,OACxCa,EAAcd,EAAqBoB,EAAOnB,OAN5B,gDAQdoB,QAAQC,IAAR,MARc,yDAAH,qDAYTC,EAAW,uCAAG,WAAOC,GAAP,SAAAN,EAAA,sEACZC,IAAMM,KACV,kEACAD,GAHgB,uBAKZP,IALY,2CAAH,sDAQjBS,qBAAU,WACRT,MACC,IAEH,IAkBMU,EAAa,uCAAG,WAAOrB,GAAP,SAAAY,EAAA,+EAEZC,IAAMS,OAAN,qEAC0DtB,EAD1D,UAFY,sDAMlBe,QAAQC,IAAR,MANkB,uBAQlBL,IARkB,0EAAH,sDAabY,EAAc,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,sDACfa,EAAc,YAAIpB,GAAUmB,QAChC,SAACE,GAAD,OACEA,EAAKC,UAAUC,cAAcC,SAASL,EAAOI,gBAC7CF,EAAKI,SAASF,cAAcC,SAASL,EAAOI,kBAEhDpB,EAAciB,GANO,2CAAH,sDASpB,OACE,kBAACjC,EAAmBuC,SAApB,CACEC,MAAO,CACL3B,WACAE,qBACA0B,WAtCa,SAACf,GACIX,EAAmB2B,MACvC,SAACR,GAAD,OACEA,EAAKC,UAAUC,gBAAkBV,EAAQS,UAAUC,eACnDF,EAAKI,SAASF,gBAAkBV,EAAQY,SAASF,kBAVrDlB,GAAQ,GACRyB,YAAW,WACTzB,GAAQ,KACP,MAS8BO,EAAYC,IAiCzCG,gBACAE,iBACAd,SAGDN,EAAMiC,WCzEEC,G,MAjBO,SAAC,GAAuB,IAArBnB,EAAoB,EAApBA,QAASoB,EAAW,EAAXA,KACxBjB,EAAkBkB,qBAAW/C,GAA7B6B,cACR,OACE,4BAEE,8BACGH,EAAQS,UADX,IACuBT,EAAQY,SAD/B,KAC2C,KACnC,IACR,8BACGZ,EAAQsB,YADX,IACyBF,GAEzB,4BAAQG,UAAU,aAAaC,QAAS,kBAAMrB,EAAcH,EAAQlB,MAClE,0BAAMyC,UAAU,oBAAhB,SCbFE,EACO,GADPA,EAEM,GAFNA,EAGS,GA2EAC,EAzEK,WAAM,MAEExC,mBAASuC,GAFX,mBAEjBE,EAFiB,KAEVC,EAFU,OAGA1C,mBAASuC,GAHT,mBAGjBI,EAHiB,KAGXC,EAHW,OAII5C,mBAASuC,GAJb,mBAIjBM,EAJiB,KAITC,EAJS,KAMhBjB,EAAeM,qBAAW/C,GAA1ByC,WAeFkB,EAAe,SAACC,GACpB,IAAIC,EAAaD,EAAEE,OAAOC,KACP,cAAfF,EACFP,EAASM,EAAEE,OAAOtB,OACM,aAAfqB,EACTL,EAAQI,EAAEE,OAAOtB,OAEjBkB,EAAUE,EAAEE,OAAOtB,QAIvB,OACE,0BACES,UAAU,UACVe,SA3BiB,SAACJ,GACpBA,EAAEK,iBACF,IAAMvC,EAAU,CACdS,UAAWkB,EACXf,SAAUiB,EACVP,YAAaS,EAAOS,QAAQ,wBAAyB,aAKvDzB,EAAWf,IAkBTyC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,MAAO,SAE1D,2BAAOC,QAAS,aAAhB,cACA,2BACE/D,GAAI,YACJgE,KAAK,OACLhC,MAAOa,EACPoB,SAAUd,EACVI,KAAK,YACLW,UAAQ,IAEV,2BAAOH,QAAS,YAAhB,aACA,2BACE/D,GAAI,WACJgE,KAAK,OACLhC,MAAOe,EACPkB,SAAUd,EACVI,KAAK,WACLW,UAAQ,IAEV,2BAAOH,QAAQ,UAAf,UACA,2BACE/D,GAAI,SACJgE,KAAK,SACLhC,MAAOiB,EACPgB,SAAUd,EACVI,KAAK,cACLY,UAAW,GACXD,UAAQ,IAEV,4BAAQzB,UAAU,aAAauB,KAAK,UAApC,iB,gBCxDSI,EAdA,WAAO,IACZ7C,EAAmBgB,qBAAW/C,GAA9B+B,eAKR,OACE,yBAAKkB,UAAU,WACb,4CACA,2BAAOc,KAAK,SAASU,SAPJ,SAACb,GACpB7B,EAAe6B,EAAEE,OAAOtB,Y,kCCIbqC,EARD,WACZ,OACE,yBAAK5B,UAAU,SACb,+CCqCS6B,EAhCG,WAAO,IAAD,EACe/B,qBAAW/C,GAAxCe,EADc,EACdA,mBAAoBE,EADN,EACMA,KAE5B,OADAM,QAAQC,IAAIP,GAEV,yBAAKgC,UAAU,aACb,kBAAC8B,EAAA,EAAD,CACEC,GAAI/D,EACJgE,QAAS,IACTC,WAAYC,IACZC,eAAa,GAEb,kBAAC,EAAD,OAEF,wBAAInC,UAAU,QAAd,aACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACoC,EAAA,EAAD,CAAiBC,UAAU,MACxBvE,EAAmBT,KAAI,SAACoB,GAAD,OACtB,kBAACqD,EAAA,EAAD,CACExE,IAAKmB,EAAQlB,GACbyE,QAAS,IACTG,eAAa,EACbF,WAAYK,KAEZ,kBAAC,EAAD,CAAe7D,QAASA,WCpBrB8D,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCLNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8f700867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const ContactListContext = createContext();\n\nconst transformFetchResult = (data) => {\n  const transformedData = Object.keys(data).map((key) => ({\n    id: key,\n    ...data[key],\n  }));\n  return transformedData.reverse();\n};\n\nconst ContactListContextProvider = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [replicatedContacts, setReplicates] = useState([]);\n  const [isOn, setShow] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const result = await axios(\n        'https://free-cookies-for-my-niggas.firebaseio.com/contacts.json'\n      );\n      setContacts(transformFetchResult(result.data));\n      setReplicates(transformFetchResult(result.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const postContact = async (contact) => {\n    await axios.post(\n      'https://free-cookies-for-my-niggas.firebaseio.com/contacts.json',\n      contact\n    );\n    await fetchData();\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const animateAlert = () => {\n    setShow(true);\n    setTimeout(function () {\n      setShow(false);\n    }, 1000);\n  };\n  // Add contact\n  const addContact = (contact) => {\n    const foundContacts = replicatedContacts.find(\n      (item) =>\n        item.firstName.toLowerCase() === contact.firstName.toLowerCase() &&\n        item.lastName.toLowerCase() === contact.lastName.toLowerCase()\n    );\n    foundContacts ? animateAlert() : postContact(contact);\n  };\n  // postContact(contact);\n\n  // Delete contact\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(\n        `https://free-cookies-for-my-niggas.firebaseio.com/contacts/${id}.json`\n      );\n    } catch (error) {\n      console.log(error);\n    } finally {\n      fetchData();\n    }\n  };\n\n  // Filter contacts\n  const filterContacts = async (filter) => {\n    const newContacts = [...contacts].filter(\n      (item) =>\n        item.firstName.toLowerCase().includes(filter.toLowerCase()) ||\n        item.lastName.toLowerCase().includes(filter.toLowerCase())\n    );\n    setReplicates(newContacts);\n  };\n\n  return (\n    <ContactListContext.Provider\n      value={{\n        contacts,\n        replicatedContacts,\n        addContact,\n        deleteContact,\n        filterContacts,\n        isOn,\n      }}\n    >\n      {props.children}\n    </ContactListContext.Provider>\n  );\n};\n\nexport default ContactListContextProvider;\n","import React, { useContext } from 'react';\nimport { ContactListContext } from '../../contexts/ContactListContext';\n\nconst SingleContact = ({ contact, text }) => {\n  const { deleteContact } = useContext(ContactListContext);\n  return (\n    <li>\n      {/* <li> */}\n      <span>\n        {contact.firstName} {contact.lastName} :{' '}\n      </span>{' '}\n      <span>\n        {contact.phoneNumber} {text}\n      </span>\n      <button className=\"delete-btn\" onClick={() => deleteContact(contact.id)}>\n        <span className=\"inner-delete-btn\">X</span>\n      </button>\n    </li>\n  );\n};\nexport default SingleContact;\n","import React, { useState, useContext } from 'react';\nimport { ContactListContext } from '../../contexts/ContactListContext';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  phoneNumber: '',\n};\nconst ContactForm = () => {\n  // const [contact, setContact] = useState(initialState);\n  const [first, setFirst] = useState(initialState.firstName);\n  const [last, setLast] = useState(initialState.lastName);\n  const [number, setNumber] = useState(initialState.phoneNumber);\n\n  const { addContact } = useContext(ContactListContext);\n  // const { firstName, lastName, phoneNumber } = contact;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      firstName: first,\n      lastName: last,\n      phoneNumber: number.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'),\n    };\n    // setFirst('');\n    // setLast('');\n    // setNumber('');\n    addContact(contact);\n  };\n\n  const handleChange = (e) => {\n    let targetName = e.target.name;\n    if (targetName === 'firstName') {\n      setFirst(e.target.value);\n    } else if (targetName === 'lastName') {\n      setLast(e.target.value);\n    } else {\n      setNumber(e.target.value);\n    }\n  };\n\n  return (\n    <form\n      className=\"section\"\n      onSubmit={handleSubmit}\n      style={{ display: 'flex', flexDirection: 'column', width: '100%' }}\n    >\n      <label htmlFor={'firstName'}>First name</label>\n      <input\n        id={'firstName'}\n        type=\"text\"\n        value={first}\n        onChange={handleChange}\n        name=\"firstName\"\n        required\n      />\n      <label htmlFor={'lastName'}>Last name</label>\n      <input\n        id={'lastName'}\n        type=\"text\"\n        value={last}\n        onChange={handleChange}\n        name=\"lastName\"\n        required\n      />\n      <label htmlFor=\"number\">Number</label>\n      <input\n        id={'number'}\n        type=\"number\"\n        value={number}\n        onChange={handleChange}\n        name=\"phoneNumber\"\n        maxLength={10}\n        required\n      />\n      <button className=\"submit-btn\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import SubmitButton from './submitButton/SubmitButton';\n\n// const postContact = async (contact) => {\n//   const fetchResult = await axios.post(\n//     'https://free-cookies-for-my-niggas.firebaseio.com/contacts.json',\n//     contact\n//   );\n//   console.log(fetchResult);\n// };\n\n// const initialState = {\n//   firstName: '',\n//   lastName: '',\n//   phoneNumber: '',\n// };\n\n// class ContactForm extends Component {\n//   state = { ...initialState };\n\n//   handleChange = (evt) => {\n//     // console.log(evt.target.value);\n//     this.setState({ [evt.target.name]: evt.target.value });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     postContact({ ...this.state });\n//     this.setState({ ...initialState });\n//     // console.log(contact);\n//   };\n\n//   render() {\n//     const { firstName, lastName, phoneNumber } = this.state;\n//     return (\n//       <form\n//         onSubmit={this.handleSubmit}\n//         style={{ display: 'flex', flexDirection: 'column', width: '100%' }}\n//       >\n//         <label htmlFor={'firstName'}>First name</label>\n//         <input\n//           id={'firstName'}\n//           type=\"text\"\n//           value={firstName}\n//           onChange={this.handleChange}\n//           name=\"firstName\"\n//         />\n//         <label htmlFor={'lastName'}>Last name</label>\n//         <input\n//           id={'lastName'}\n//           type=\"text\"\n//           value={lastName}\n//           onChange={this.handleChange}\n//           name=\"lastName\"\n//         />\n//         <label htmlFor=\"number\">Number</label>\n//         <input\n//           id={'number'}\n//           type=\"number\"\n//           value={phoneNumber}\n//           onChange={this.handleChange}\n//           name=\"phoneNumber\"\n//         />\n//         <SubmitButton />\n//       </form>\n//     );\n//   }\n// }\n\n// export default ContactForm;\n","import React, { useContext } from 'react';\nimport { ContactListContext } from '../../contexts/ContactListContext';\n\nconst Filter = () => {\n  const { filterContacts } = useContext(ContactListContext);\n  const handleChange = (e) => {\n    filterContacts(e.target.value);\n  };\n\n  return (\n    <div className=\"section\">\n      <p>Find contacts</p>\n      <input name=\"filter\" onChange={handleChange}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Alert = () => {\n  return (\n    <div className=\"alert\">\n      <p>Already exists</p>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useContext } from 'react';\nimport { ContactListContext } from '../../contexts/ContactListContext';\nimport SingleContact from '../singleContact/SingleContact';\nimport ContactForm from '../contactForm/ContactForm';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Filter from '../filter/Filter';\nimport slideTransition from '../../transitions/slide.module.css';\nimport popTransition from '../../transitions/pop.module.css';\nimport Alert from '../alert/Alert';\n\nconst PhoneBook = () => {\n  const { replicatedContacts, isOn } = useContext(ContactListContext);\n  console.log(isOn);\n  return (\n    <div className=\"container\">\n      <CSSTransition\n        in={isOn}\n        timeout={200}\n        classNames={slideTransition}\n        unmountOnExit\n      >\n        <Alert />\n      </CSSTransition>\n      <h1 className=\"logo\">PhoneBook</h1>\n      <ContactForm />\n      <Filter></Filter>\n      <TransitionGroup component=\"ul\">\n        {replicatedContacts.map((contact) => (\n          <CSSTransition\n            key={contact.id}\n            timeout={250}\n            unmountOnExit\n            classNames={popTransition}\n          >\n            <SingleContact contact={contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","import React from 'react';\nimport ContactListContextProvider from './contexts/ContactListContext';\n// import ContactList from './components/contactList/ContactList';\n// import '../App.css';\nimport './App.css';\nimport PhoneBook from './components/phoneBook/PhoneBook';\nfunction App() {\n  return (\n    <ContactListContextProvider>\n      <PhoneBook />\n    </ContactListContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}